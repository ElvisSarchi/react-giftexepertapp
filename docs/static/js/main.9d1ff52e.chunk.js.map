{"version":3,"sources":["components/AddCategory.js","components/GifGridComponent.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cats","find","c","onSubmit","type","value","onChange","target","onClick","GifGridComponent","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized","console","log","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","i","GifExpertApp","categorias","cat","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAO1CC,EAAe,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GACb,OAAOA,EAAKC,MAAK,SAACC,GAAD,OAAOA,IAAMT,KAC1BO,EADG,CAEFP,GAFE,mBAEaO,OAEtBN,EAAc,MAIlB,OACE,uBAAMS,SAAUR,EAAhB,UACE,uBACES,KAAK,OACLC,MAAOZ,EACPa,SArBoB,SAACV,GACzBF,EAAcE,EAAEW,OAAOF,UAsBrB,uBACA,wBAAQG,QAASb,EAAjB,yB,QChBSc,EAXU,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACE,sBAAKC,UAAU,6CAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPGK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,iDACgCO,UACpDF,GAFoB,+DAIHG,MAAMR,GAJH,cAIhBS,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC9BhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,UAAUhB,QAE7BiB,QAAQC,IAAIN,GAZU,kBAafA,GAbe,4CAAH,sDCoBNO,EAjBC,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,ECAN,SAACA,GAAe,IAAD,EACfzB,mBAAS,CACjC+B,KAAM,GACNS,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACRnB,EAASC,GAAUmB,MAAK,SAACC,GACrBH,EAAS,CACLX,KAAMc,EACNL,SAAQ,SAGf,CAACf,IAEGgB,EDd0BK,CAAarB,GAAjCU,EADmB,EACxBJ,KAAaS,EADW,EACXA,QAErB,OACE,qCACE,6BAAKf,IACJe,GAAW,wCACZ,qBAAKnB,UAAU,YAAf,SACGc,EAAOF,KAAI,SAACc,GACX,OAAO,cAAC,EAAD,eAAiCA,GAAVA,EAAE7B,aER7B8B,EAAe,WAAO,IAAD,EACIhD,mBAAS,CAC3C,YACA,YACA,gBAJ8B,mBACzBiD,EADyB,KACblD,EADa,KAWhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BACGkD,EAAWhB,KAAI,SAACiB,GAAD,OACd,cAAC,EAAD,CAAoBzB,SAAUyB,GAAfA,YCjBzBC,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.9d1ff52e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategorias((cats) => {\r\n        return cats.find((c) => c === inputValue)\r\n          ? cats\r\n          : [inputValue, ...cats];\r\n      });\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      ></input>\r\n      <hr />\r\n      <button onClick={handleSubmit}>Agregar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GifGridComponent = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__backInDown\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifGridComponent.propTypes = {};\r\n\r\nexport default GifGridComponent;\r\n","export const getGifts = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=WWKythHdWI5YABSRxrY3Ewix8kyQ4ivw`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  //console.log(data);\r\n  const gifs = data.map((img) => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized.url,\r\n  }));\r\n  console.log(gifs);\r\n  return gifs;\r\n};\r\n","import GifGridComponent from \"./GifGridComponent\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((i) => {\r\n          return <GifGridComponent key={i.id} {...i} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category ) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifts(category).then((imgs)=>{\r\n        setstate({\r\n            data: imgs,\r\n            loading:false\r\n        });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categorias, setCategorias] = useState([\r\n    \"One Punch\",\r\n    \"Samurai X\",\r\n    \"Dragon Ball\",\r\n  ]);\r\n\r\n  const handleAdd = () => {\r\n    setCategorias([,...categorias]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategorias={setCategorias} />\r\n     \r\n      <ol>\r\n        {categorias.map((cat) => (\r\n          <GifGrid key ={cat} category={cat} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifExpertApp } from \"./components/GifExpertApp\";\n\nReactDOM.render(\n  <GifExpertApp />,\n\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}